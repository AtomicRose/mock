webpackJsonp([8,33,34],{158:function(n,t){n.exports='# Base\nsnippet em.base.boolean\n\t@boolean\nsnippet em.base.natural\n\t@natural(${1:60}, ${2:100})\nsnippet em.base.integer\n\t@integer(${1:60}, ${2:100})\nsnippet em.base.float\n\t@float(${1:60}, ${2:100})\nsnippet em.base.character\n\t@character(${1:\'abcde\'})\nsnippet em.base.string\n\t@string(${1:7}, ${2:20})\nsnippet em.base.range\n\t@range(${1:3}, ${2:7})\n# Date\nsnippet em.date.date\n\t@date\nsnippet em.date.time\n\t@time\nsnippet em.date.datetime\n\t@datetime\nsnippet em.date.now\n\t@now\n# Image\nsnippet em.image.image\n\t@image(${1:\'200x100\'}, ${2:\'#50B347\'}, ${3:\'#FFF\'}, ${4:\'EasyMock\'})\nsnippet em.image.dataImage\n\t@dataImage(${1:\'200x100\'}, ${2:\'EasyMock\'})\n# Color\nsnippet em.color.color\n\t@color\nsnippet em.color.hex\n\t@hex\nsnippet em.color.rgb\n\t@rgb\nsnippet em.color.rgba\n\t@rgba\nsnippet em.color.hsl\n\t@hsl\n# Text\nsnippet em.text.paragraph\n\t@paragraph(${1:1}, ${2:3})\nsnippet em.text.sentence\n\t@sentence(${1:3}, ${2:5})\nsnippet em.text.word\n\t@word(${1:3}, ${2:5})\nsnippet em.text.title\n\t@title(${1:3}, ${2:5})\nsnippet em.text.cparagraph\n\t@cparagraph(${1:1}, ${2:3})\nsnippet em.text.csentence\n\t@csentence(${1:3}, ${2:5})\nsnippet em.text.cword\n\t@cword(${1:\'零一二三四五六七八九十\'}, ${2:5}, ${3:7})\nsnippet em.text.ctitle\n\t@ctitle(${1:3}, ${2:5})\n# Name\nsnippet em.name.first\n\t@first\nsnippet em.name.last\n\t@last\nsnippet em.name.name\n\t@name\nsnippet em.name.cfirst\n\t@cfirst\nsnippet em.name.clast\n\t@clast\nsnippet em.name.cname\n\t@cname\n# Web\nsnippet em.web.url\n\t@url\nsnippet em.web.domain\n\t@domain\nsnippet em.web.protocol\n\t@protocol\nsnippet em.web.tld\n\t@tld\nsnippet em.web.email\n\t@email\nsnippet em.web.ip\n\t@ip\n# Address\nsnippet em.address.region\n\t@region\nsnippet em.address.province\n\t@province\nsnippet em.address.city\n\t@city(${1:true})\nsnippet em.address.county\n\t@county(${1:true})\nsnippet em.address.zip\n\t@zip\n# Helper\nsnippet em.helper.capitalize\n\t@capitalize(${1:\'hello\'})\nsnippet em.helper.upper\n\t@upper(${1:\'hello\'})\nsnippet em.helper.lower\n\t@lower(${1:\'HELLO\'})\nsnippet em.helper.pick\n\t@pick([\'a\', \'e\', \'i\', \'o\', \'u\'])\nsnippet em.helper.shuffle\n\t@shuffle([\'a\', \'e\', \'i\', \'o\', \'u\'])\n# Miscellaneous\nsnippet em.miscellaneous.guid\n\t@guid\nsnippet em.miscellaneous.id\n\t@id\nsnippet em.miscellaneous.increment\n\t@increment(${1:1000})\nsnippet em.demo.all\n\t{\n\t  "base": {\n\t    "range": "@range(3, 7)",\n\t    "string": "@string(7, 20)",\n\t    "character": "@character(\'abcde\')",\n\t    "float": "@float(60, 100)",\n\t    "integer": "@integer(60, 100)",\n\t    "natural": "@natural(60, 100)",\n\t    "boolean": "@boolean"\n\t  },\n\t  "date": {\n\t    "date": "@date",\n\t    "time": "@time",\n\t    "datetime": "@datetime",\n\t    "now": "@now"\n\t  },\n\t  "image": {\n\t    "image": "@image(\'200x100\', \'#50B347\', \'#FFF\', \'EasyMock\')"\n\t  },\n\t  "color": {\n\t    "color": "@color",\n\t    "hex": "@hex",\n\t    "rgb": "@rgb",\n\t    "rgba": "@rgba",\n\t    "hsl": "@hsl"\n\t  },\n\t  "text": {\n\t    "paragraph": "@paragraph(1, 3)",\n\t    "sentence": "@sentence(3, 5)",\n\t    "word": "@word(3, 5)",\n\t    "title": "@title(3, 5)",\n\t    "cparagraph": "@cparagraph(1, 3)",\n\t    "csentence": "@csentence(3, 5)",\n\t    "cword": "@cword(\'零一二三四五六七八九十\', 5, 7)",\n\t    "ctitle": "@ctitle(3, 5)"\n\t  },\n\t  "name": {\n\t    "first": "@first",\n\t    "last": "@last",\n\t    "name": "@name",\n\t    "cfirst": "@cfirst",\n\t    "clast": "@clast",\n\t    "cname": "@cname"\n\t  },\n\t  "web": {\n\t    "url": "@url",\n\t    "domain": "@domain",\n\t    "protocol": "@protocol",\n\t    "tld": "@tld",\n\t    "email": "@email",\n\t    "ip": "@ip"\n\t  },\n\t  "address": {\n\t    "region": "@region",\n\t    "province": "@province",\n\t    "city": "@city(true)",\n\t    "county": "@county(true)",\n\t    "zip": "@zip"\n\t  },\n\t  "helper": {\n\t    "capitalize": "@capitalize(\'hello\')",\n\t    "upper": "@upper(\'hello\')",\n\t    "lower": "@lower(\'HELLO\')",\n\t    "pick": "@pick([\'a\', \'e\', \'i\', \'o\', \'u\'])",\n\t    "shuffle": "@shuffle([\'a\', \'e\', \'i\', \'o\', \'u\'])"\n\t  },\n\t  "miscellaneous": {\n\t    "id": "@id",\n\t    "guid": "@guid",\n\t    "increment": "@increment(1000)"\n\t  }\n\t}\n'},159:function(n,t){n.exports='# Prototype\nsnippet proto\n\t${1:class_name}.prototype.${2:method_name} = function(${3:first_argument}) {\n\t\t${4:// body...}\n\t};\n# Function\nsnippet fun\n\tfunction ${1?:function_name}(${2:argument}) {\n\t\t${3:// body...}\n\t}\n# Anonymous Function\nregex /((=)\\s*|(:)\\s*|(\\()|\\b)/f/(\\))?/\nsnippet f\n\tfunction${M1?: ${1:functionName}}($2) {\n\t\t${0:$TM_SELECTED_TEXT}\n\t}${M2?;}${M3?,}${M4?)}\n# Immediate function\ntrigger \\(?f\\(\nendTrigger \\)?\nsnippet f(\n\t(function(${1}) {\n\t\t${0:${TM_SELECTED_TEXT:/* code */}}\n\t}(${1}));\n# if\nsnippet if\n\tif (${1:true}) {\n\t\t${0}\n\t}\n# if ... else\nsnippet ife\n\tif (${1:true}) {\n\t\t${2}\n\t} else {\n\t\t${0}\n\t}\n# tertiary conditional\nsnippet ter\n\t${1:/* condition */} ? ${2:a} : ${3:b}\n# switch\nsnippet switch\n\tswitch (${1:expression}) {\n\t\tcase \'${3:case}\':\n\t\t\t${4:// code}\n\t\t\tbreak;\n\t\t${5}\n\t\tdefault:\n\t\t\t${2:// code}\n\t}\n# case\nsnippet case\n\tcase \'${1:case}\':\n\t\t${2:// code}\n\t\tbreak;\n\t${3}\n\n# while (...) {...}\nsnippet wh\n\twhile (${1:/* condition */}) {\n\t\t${0:/* code */}\n\t}\n# try\nsnippet try\n\ttry {\n\t\t${0:/* code */}\n\t} catch (e) {}\n# do...while\nsnippet do\n\tdo {\n\t\t${2:/* code */}\n\t} while (${1:/* condition */});\n# Object Method\nsnippet :f\nregex /([,{[])|^\\s*/:f/\n\t${1:method_name}: function(${2:attribute}) {\n\t\t${0}\n\t}${3:,}\n# setTimeout function\nsnippet setTimeout\nregex /\\b/st|timeout|setTimeo?u?t?/\n\tsetTimeout(function() {${3:$TM_SELECTED_TEXT}}, ${1:10});\n# Get Elements\nsnippet gett\n\tgetElementsBy${1:TagName}(\'${2}\')${3}\n# Get Element\nsnippet get\n\tgetElementBy${1:Id}(\'${2}\')${3}\n# console.log (Firebug)\nsnippet cl\n\tconsole.log(${1});\n# return\nsnippet ret\n\treturn ${1:result}\n# for (property in object ) { ... }\nsnippet fori\n\tfor (var ${1:prop} in ${2:Things}) {\n\t\t${0:$2[$1]}\n\t}\n# hasOwnProperty\nsnippet has\n\thasOwnProperty(${1})\n# docstring\nsnippet /**\n\t/**\n\t * ${1:description}\n\t *\n\t */\nsnippet @par\nregex /^\\s*\\*\\s*/@(para?m?)?/\n\t@param {${1:type}} ${2:name} ${3:description}\nsnippet @ret\n\t@return {${1:type}} ${2:description}\n# JSON.parse\nsnippet jsonp\n\tJSON.parse(${1:jstr});\n# JSON.stringify\nsnippet jsons\n\tJSON.stringify(${1:object});\n# self-defining function\nsnippet sdf\n\tvar ${1:function_name} = function(${2:argument}) {\n\t\t${3:// initial code ...}\n\n\t\t$1 = function($2) {\n\t\t\t${4:// main code}\n\t\t};\n\t}\n# singleton\nsnippet sing\n\tfunction ${1:Singleton} (${2:argument}) {\n\t\t// the cached instance\n\t\tvar instance;\n\n\t\t// rewrite the constructor\n\t\t$1 = function $1($2) {\n\t\t\treturn instance;\n\t\t};\n\n\t\t// carry over the prototype properties\n\t\t$1.prototype = this;\n\n\t\t// the instance\n\t\tinstance = new $1();\n\n\t\t// reset the constructor pointer\n\t\tinstance.constructor = $1;\n\n\t\t${3:// code ...}\n\n\t\treturn instance;\n\t}\n# class\nsnippet class\nregex /^\\s*/clas{0,2}/\n\tvar ${1:class} = function(${20}) {\n\t\t$40$0\n\t};\n\n\t(function() {\n\t\t${60:this.prop = ""}\n\t}).call(${1:class}.prototype);\n\n\texports.${1:class} = ${1:class};\n#\nsnippet for-\n\tfor (var ${1:i} = ${2:Things}.length; ${1:i}--; ) {\n\t\t${0:${2:Things}[${1:i}];}\n\t}\n# for (...) {...}\nsnippet for\n\tfor (var ${1:i} = 0; $1 < ${2:Things}.length; $1++) {\n\t\t${3:$2[$1]}$0\n\t}\n# for (...) {...} (Improved Native For-Loop)\nsnippet forr\n\tfor (var ${1:i} = ${2:Things}.length - 1; $1 >= 0; $1--) {\n\t\t${3:$2[$1]}$0\n\t}\n\n\n#modules\nsnippet def\n\tdefine(function(require, exports, module) {\n\t"use strict";\n\tvar ${1/.*\\///} = require("${1}");\n\n\t$TM_SELECTED_TEXT\n\t});\nsnippet req\nguard ^\\s*\n\tvar ${1/.*\\///} = require("${1}");\n\t$0\nsnippet requ\nguard ^\\s*\n\tvar ${1/.*\\/(.)/\\u$1/} = require("${1}").${1/.*\\/(.)/\\u$1/};\n\t$0\n'},6:function(n,t,e){"use strict";var i=e(158),p=e(159);ace.define("ace/snippets/javascript",["require","exports","module"],function(n,t){t.snippetText=p+"\n"+i,t.scope="javascript"})}});